// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int KBD;

    /** Initializes the keyboard. */
    function void init() {
        let KBD = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *OutputTest()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(KBD);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char ch;
        // Wait for keypress
        while(Keyboard.keyPressed()=0){
            // do nothing
            do Keyboard.idle();
        }
        let ch = Keyboard.keyPressed();
        while(~(Keyboard.keyPressed()=0)){
            // do nothing
            do Keyboard.idle();
        }
        do Output.printChar(ch);
        return ch;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str;
        var char ch;
        var boolean flag;
        let flag = true;
        let str = String.new(64);
        do Output.printString(message);
        while(flag) {
            let ch = Keyboard.readChar(); 
            if(ch=String.newLine()) {
                do Output.println();
                let flag = false;
            }
            if(ch=String.backSpace()){
                if((str.length())>0){
                    do Output.backSpace();
                    do str.eraseLastChar();
                }
            }else{
                do str.appendChar(ch);
            }
        }
        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String str;
        let str = String.new(64);
        let str = Keyboard.readLine(message);
        return str.intValue();
    }

    function void idle() {
        return;
    }
}
